version: '2'
services:
  zookeeper:
    image: mesoscloud/zookeeper:3.4.8
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    volumes:
          - ~/docker-volumes/zookeeper-data/data:/data
          - ~/docker-volumes/zookeeper-data/datalog:/datalog
    networks:
      default:
        ipv4_address: ${MAX_ZOOKEEPER_HOST}

  kafka:
    build: .
    image: max-kafka
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "7203:7203"
    environment:
      KAFKA_VERSION: ${KAFKA_VERSION}
#      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
#      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_ADVERTISED_HOST_NAME}
#      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_ZOOKEEPER_CONNECT: ${MAX_ZOOKEEPER_HOST}:2181
      KAFKA_NUM_PARTITIONS: ${KAFKA_NUM_PARTITIONS}
#      KAFKA_LOG_RETENTION_HOURS: ${KAFKA_LOG_RETENTION_HOURS}
#      KAFKA_LOG_RETENTION_BYTES: ${KAFKA_LOG_RETENTION_BYTES}
      KAFKA_DELETE_TOPIC_ENABLE: ${KAFKA_DELETE_TOPIC_ENABLE}
#      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: ${KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS}
#      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: ${KAFKA_LOG_CLEANER_DELETE_RETENTION_MS}
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG_CLEANER_ENABLE: ${KAFKA_LOG_CLEANER_ENABLE}
#      KAFKA_LOG_CLEANER_MIN_CLEANABLE_RATIO: ${KAFKA_LOG_CLEANER_MIN_CLEANABLE_RATIO}
    volumes:
      - ~/docker-volumes/kafka-data/logs:/app/kafka/logs
    networks:
      default:
        ipv4_address: ${MAX_KAFKA_HOST}

networks:
  default:
    external:
      name: ${MAX_NETWORK}
